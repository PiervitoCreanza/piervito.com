<script is:inline src="/aos/aos.js"></script>
<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    console.log("No theme preference found in localStorage");
    // Fallback to dark theme
    return "dark";
    /*
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";*/
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
  AOS.init({
    easing: "ease-in-out",
    duration: 700,
  });
</script>
